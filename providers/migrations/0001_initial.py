# Generated by Django 3.2.2 on 2021-05-12 13:48

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Creditation',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Municipality',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('name', models.CharField(max_length=255, unique=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('name', models.CharField(max_length=255)),
                ('service_description', models.TextField(default='', max_length=2000)),
                ('company_description', models.TextField(default='', max_length=2000)),
                (
                    'min_age',
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    'max_age',
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                ('open_hours', models.CharField(blank=True, max_length=100, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='')),
                ('contact_name', models.CharField(max_length=100)),
                (
                    'contact_title',
                    models.CharField(blank=True, max_length=60, null=True),
                ),
                ('contact_phone', models.CharField(max_length=15)),
                (
                    'contact_email',
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ('contact_phone_2', models.CharField(max_length=15, null=True)),
                (
                    'contact_email_2',
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ('contact_address', models.CharField(max_length=120)),
                (
                    'contact_postal_code',
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(9999),
                        ]
                    ),
                ),
                ('contact_city', models.CharField(max_length=80)),
                ('contact_cvr', models.CharField(blank=True, max_length=20, null=True)),
                ('contact_website', models.URLField(blank=True, null=True)),
                (
                    'waiting_time',
                    models.CharField(
                        choices=[
                            ('Ikke oplyst', 'Ventetid ikke oplyst'),
                            ('Ingen ventetid', 'Ingen ventetid'),
                            ('Muligvis ventetid', 'Mulig ventetid'),
                        ],
                        default='Ikke oplyst',
                        max_length=100,
                    ),
                ),
                (
                    'status_report_interval',
                    models.CharField(
                        choices=[
                            ('Statusrapport ikke oplyst', 'Statusrapport ikke oplyst'),
                            (
                                'Statusrapport efter aftale',
                                'Statusrapport efter aftale',
                            ),
                            ('Ikke relevant', 'Ikke relevant'),
                            ('Status månedligt', 'Statusrapport månedligt'),
                            ('Statusrapport kvartalvis', 'Statusrapport kvartalvis'),
                            ('Statusrapport halvårligt', 'Statusrapport halvårligt'),
                            ('Statusrapport årligt', 'Statusrapport årligt'),
                        ],
                        default='Statusrapport ikke oplyst',
                        max_length=255,
                    ),
                ),
                (
                    'sexes',
                    models.CharField(
                        choices=[
                            ('Både drenge og piger', 'Både drenge og piger'),
                            ('Kun drenge', 'Kun drenge'),
                            ('Kun piger', 'Kun piger'),
                        ],
                        default='Både drenge og piger',
                        max_length=255,
                    ),
                ),
                (
                    'creditations',
                    models.ManyToManyField(blank=True, to='providers.Creditation'),
                ),
                ('languages', models.ManyToManyField(to='providers.Language')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('name', models.CharField(max_length=255, unique=True)),
                (
                    'service_type',
                    models.CharField(
                        choices=[
                            ('preventive', 'Forebyggende ydelser'),
                            ('intrusive', 'Indgribende ydelser'),
                            ('other', 'Andre ydelser'),
                        ],
                        default='other',
                        max_length=255,
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('name', models.CharField(max_length=255, unique=True)),
                (
                    'theme_type',
                    models.CharField(
                        choices=[
                            ('Socialt', 'Socialt'),
                            ('Fysisk', 'Fysisk'),
                            ('Psykisk', 'Psykisk'),
                        ],
                        default='Socialt',
                        max_length=255,
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SocialWorker',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'municipality',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='providers.municipality',
                    ),
                ),
                (
                    'user',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'full_day_price',
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    'hourly_price',
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    'category',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='providers.servicecategory',
                    ),
                ),
                (
                    'provider',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='providers.provider',
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='provider',
            name='regions',
            field=models.ManyToManyField(to='providers.Region'),
        ),
        migrations.AddField(
            model_name='provider',
            name='themes',
            field=models.ManyToManyField(to='providers.Theme'),
        ),
        migrations.AddField(
            model_name='provider',
            name='user',
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
    ]
